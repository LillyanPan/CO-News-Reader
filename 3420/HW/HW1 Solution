return r0
bsearch
	push {r4-r7, LR}
	mov r4, r0, i
	mov r5, r1, j
	mov r6,r2, v
	cmp r4, r5, if (i==j)
	bne caseNE
	ldr r0, a_addr
	ldr r0, [r0,r4,lsl #2]
	cmp r0,r6
	bne return NegOne
	mov r0,r4
	POP {r4-r7, PC}, return
caseNE
	add r7,r4,r5; h=i*j
	asr r7,r7, #1
	ldr r0, a_addr
	ldr r0, [r0,r7,lsl, #2]
	cmp r0,r6
	bne continue
	mov r0,r7
	pop {r4-r7, pc} return
continue
	cmp r0,r6
	ble high half
	mov r0,r4
	mov r1,r7
	mov r2, r6
	bl bsearch
	POP {r4-r7, PC}
high half
	add r0,r7, #1
	mov r1, r5
	mov r2,r6
	bl bsearch
	POP {r4-r7, PC}
return
negOne
	LDR R0, #-1
	POP {r4-r7, PC}